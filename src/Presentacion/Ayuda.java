/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Dominio.Idioma;
import org.jvnet.substance.SubstanceLookAndFeel;
import org.jvnet.substance.utils.SubstanceConstants;

/**
 *
 * @author 9alej
 */
public class Ayuda extends javax.swing.JFrame {

    /**
     * Creates new form Ayuda
     */
    public Ayuda() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.btnAtras.putClientProperty( SubstanceLookAndFeel.BUTTON_SIDE_PROPERTY, SubstanceConstants.Side.RIGHT); 
    }

    Ayuda(MenuPrincipal a, String lenguaje) {
        initComponents();
        this.lenguaje = lenguaje;
        cambiarIdioma(lenguaje);
        this.setLocationRelativeTo(null);
        this.btnAtras.putClientProperty( SubstanceLookAndFeel.BUTTON_SIDE_PROPERTY, SubstanceConstants.Side.RIGHT); 
        p = a;
        
    }
    public void cambiarIdioma(String nombreIdioma){
        idioma =new Idioma(nombreIdioma);
        btnAtras.setText(idioma.getProperty("btnAtras"));
        if(lenguaje.equals("Ingles"))
            txtAyuda.setText("This program has been designed for use as a management application\n" +
"projects and tasks. It has been programmed for the Java platform and therefore\n" +
"can be executed in any operating system that has installed the\n" +
"Java virtual machine, available at http://www.java.com.\n" +
"\n" +
"1 .- Options menu\n" +
"\n" +
"The program interface offers the user a menu of options with which\n" +
"be able to access the different functions.\n" +
"\n" +
"Functions:\n" +
"- Manage users.\n" +
"- Manage projects.\n" +
"- Manage Tasks.\n" +
"- User options.\n" +
"- Messages.\n" +
"\n" +
"It also provides a button in the lower right corner with which to exit\n" +
"of the application at any time.\n" +
"\n" +
"2 .- Managers\n" +
"\n" +
"In this section we will understand the functions common to the user manager,\n" +
"project manager and task manager.\n" +
"The three are composed of a list on the left, where\n" +
"will appear the user ID, project or task, clicking\n" +
"on one we will get it to appear shaded, and they will be loaded on\n" +
"text fields the information stored on them.\n" +
"\n" +
"We have 4 buttons, add, modify, delete and clean fields.\n" +
"With the add button filling the fields we can add elements to\n" +
"our system, with the edit edit one previously loaded, and the one\n" +
"delete removes the selected item from the database. The cleaning button\n" +
"fields simply empties the textual content of the application fields\n" +
"without modifying our stored information.\n" +
"\n" +
"3 .- User manager\n" +
"\n" +
"The only thing to add about the user manager is that the password does not\n" +
"is displayed, but when adding a user if the password can be typed.\n" +
"\n" +
"4 .- Project manager\n" +
"\n" +
"The ID field can not be modified since each of our projects\n" +
"is assigned by an ID that will be assigned automatically by the\n" +
"application, so you can check the ID, but not edit.\n 5 .- Task Manager\n" +
"\n" +
"The responsible user field and project can not be any, since\n" +
"tasks must be assigned to existing users and projects, for\n" +
"both you can only select a user or project already existing in the\n" +
"BBDD\n" +
"\n" +
"6 .- User options\n" +
"\n" +
"In this section you can change your password, which will only work if\n" +
"you write the new password twice, for security reasons and close\n" +
"session when another partner wants to occupy the terminal you use.\n" +
"\n" +
"7 .- Messages\n" +
"\n" +
"This section can be divided into two parts, on the one hand a list to the\n" +
"left, and on the other a text area on the right. The list will arrive\n" +
"the broadcast messages, and the exclusive messages for you, and when you click\n" +
"over one in the text area the message will be loaded, in this way\n" +
"communicate with you\n" +
"\n" +
"\n" +
"I hope I've helped!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAyuda = new javax.swing.JTextArea();
        btnAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Información sobre esta aplicación");

        txtAyuda.setColumns(20);
        txtAyuda.setRows(5);
        txtAyuda.setText("\tEste programa ha sido diseñado para su uso como aplicación de gestion de \n\tproyectos y tareas. Ha sido programado para la plataforma Java y por tanto \n\tpuede ejecutarse en cualquier sistema operativo que tenga instalada la \n\tmaquina virtual Java, disponible en http://www.java.com. \n\n1 .- Menú de opciones\n\n\tEl interfaz del programa ofrece al usuario un menú de opciones con el que \n\tpoder acceder a las distintas funciones.\n\n\t\tFunciones:\n\t\t\t- Gestionar usuarios.\n\t\t\t- Gestionar proyectos.\n\t\t\t- Gestionar Tareas.\n\t\t\t- Opciones de usuario.\n\t\t\t- Mensajes.\n\n\tAdemas proporciona un boton en la esquina inferior derecha con el que salir\n\tde la aplicación en cualquier momento.\n\n2 .- Gestores\n\n\tEn este apartado comprenderemos las funciones comunes al gestor de usuario,\n\tgestor de proyectos y gestor de tareas.\n\tLos tres estan compuestos por una lista en la parte izquierda, donde \n\taparecera el identificador de usuario, proyecto o tarea, haciendo click\n\tsobre uno conseguiremos que aparezca sombreado, y se cargaran en los \n\tcampos de texto la información almacenada sobre ellos.\n\t\n\tTenemos 4 botones, añadir, modificar, eliminar y limpiar campos.\n\tCon el boton añadir rellenando los campos podremos añadir elementos a \n\tnuestro sistema, con el modificar editar uno cargado previamente, y el de\n\teliminar elimina al elemento seleccionado de la BBDD. El boton de limpiar \n\tcampos simplemente vacia el contenido textual de los campos de la aplicación\n\tsin modificar nuestra información almacenada.\n\t\n3 .- Gestor de usuarios\n\n\tLo único que añadir respecto al gestor de usuario es que la contraseña no \n\tse muestra, pero al añadir un usuario si se puede escribir la contraseña.\n\t\n4 .- Gestor de proyectos\n\n\tEl campo ID no se puede modificar ya que cada uno de nuestros proyectos\n\tviene asignado por un ID que será asignado automaticamente por la \n\taplicación, por tanto se puede consultar el ID, pero no editar.\n\n5 .- Gestor de tareas\n\n\tEl campo usuario responsable y proyecto no pueden ser cualquiera, ya que\n\tlas tareas deben ser asignadas a usuarios y proyectos ya existentes, por\n\ttanto solo se podrá seleccionar un usuario o proyecto ya existente en la \n\tBBDD.\n\n6 .- Opciones de usuario\n\n\tEn este apartado podrás cambiar tu contraseña, que solo funcionará si \n\tescribes dos veces la nueva contraseña, por motivos de seguridad y cerrar \n\tsesión cuando otro compañero quiera ocupar el terminal que utilizas.\n\t\n7 .- Mensajes\n\n\tEste apartado puede ser dividido en dos partes, por un lado una lista a la\n\tizquierda, y por otro un area de texto a la derecha. A la lista llegarán \n\tlos mensajes de difusión, y los mensajes exclusivos para ti, y al pinchar\n\tsobre uno en el area de texto se cargará el mensaje, de esta forma podrán\n\tcomunicarse contigo.\n\n\n\t\t¡Espero haberte ayudado!");
        jScrollPane1.setViewportView(txtAyuda);

        btnAtras.setText("Atras");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        p.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ayuda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ayuda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAyuda;
    // End of variables declaration//GEN-END:variables
    private MenuPrincipal p;
    private String lenguaje;
    private Idioma idioma;
}
